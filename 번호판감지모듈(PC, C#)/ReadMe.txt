구동 HW = PC
역할 = 라즈베리파이제로에서 MQTT를 통하여 보내온 이미지를 디코딩하여 프로세싱 할 수 있도록 합니다.
받은 영상에서 번호판 영역을 검출하고, 테서렉트가 해당영역의 글자나 숫자들을 인식합니다. 

통신 = MQTT, WiFi or Ethernet
사용기술 = C#, YOLO(CNN), tesseract, opencv, mqtt
실행방법 = iot_test.csproj를 통해 프로젝트를 오픈합니다. 실행pc에 gpu(nvidia계열)이 설치되어 있지 않다면, cpu성능에 따라 검출시간이 상이합니다.
	   저희 PC는 1회 검출에 1초 이내 입니다. 비주얼 c++ 컨트리뷰트 2017이 설치되어 있어야 실행됩니다.
작성코드 = MainWindow.xaml(UI), MainWindow.xaml.cs(c# 코드)
구독 토픽 = "parkinglot/image"
발행 토픽 = "parkinglot/1/status", "parkinglot/2/status", "parkinglot/3/status", "parkinglot/1/num", "parkinglot/2/num", "parkinglot/3/num"

동작
라즈베리파이로부터 이미지를 MQTT를 통해 받습니다. 받으면 해당 내용을 디코딩 합니다.
디코딩 후, 이미지를 변수에 저장 후, 3등분 합니다.
3등분된 각 이미지에서 YOLO가 번호판의 위치를 검출하고 tesseract가 검출된 위치에서 글자나 숫자들을 인식합니다.
인식된 영역에 해당하는 토픽과 차량 번호(00나0000) 및 상태(on,off)를 전송합니다.
발행된 내용은 웹서버와 키오스크가 받습니다.

// YOLO가 번호판 영역을 검출하기 위한 학습데이터 파일은 plate라는 이름이 들어간 파일들입니다.

// 가끔 번호판이 "16나 0052|" 이나 "쯦1 구 0122켘"과 같이 인식되는 경우가 있지만, 차량번호 4자리가 모두 인식되므로
키오스크에서 차량 검색할때 문제가 되지 않습니다. 키오스크에서는 MQTT로 받은 문자열에서 사용자가 입력한 번호4자리가 모두 일치하면
차량이 위치한 영역을 표시해줍니다.
//tessract가 번호를 잘 인식하도록 영상을 그레이스케일로 변경 후, 이진화 하는 작업을 opencv를 통하여 진행하도록 코드 작성하였습니다.